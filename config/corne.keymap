/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp F       &kp P                 &kp B             &kp J    &kp L       &kp U                 &td MINUS COMMA  &trans  &kp BACKSPACE
&kp TAB           &kp A  &kp R  &hm LALT S  &hm LGUI T            &kp G             &kp M    &hm RGUI N  &hm RALT E            &kp I            &kp O   &trans
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C       &kp D                 &kp V             &kp K    &kp H       &td UNDERSCORE SLASH  &td EXCL DOT     &kp Y   &trans
                                &kp LGUI    &mt LC(LS(LALT)) SPC  &kp LEFT_SHIFT    &kp RET  &to 1       &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp ESCAPE        &trans  &trans         &kp AT     &kp DLLR      &kp PRCNT            &kp CARET         &kp LESS_THAN         &kp GREATER_THAN       &td COLON SEMI     &trans  &kp BACKSPACE
&kp TAB           &trans  &kp AMPERSAND  &kp HASH   &kp EXCL      &kp APOSTROPHE       &kp BACKSLASH     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE           &trans  &trans
&kp LEFT_CONTROL  &trans  &kp ASTRK      &kp EQUAL  &kp QUESTION  &kp DOUBLE_QUOTES    &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &trans  &to 3
                                         &kp LGUI   &to 0         &kp LEFT_SHIFT       &kp RET           &to 2                 &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp ESCAPE  &kp LS(LG(LC(N4)))  &kp C_PLAY_PAUSE  &kp C_PREV            &kp C_NEXT            &kp UNDERSCORE    &kp MINUS     &kp N7        &kp N8        &kp N9        &trans         &kp BACKSPACE
&kp TAB     &trans              &trans            &kp K_VOL_DN          &kp K_VOL_UP          &kp PLUS          &kp EQUAL     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp AMPERSAND  &trans
&kp LSHFT   &trans              &trans            &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp SLASH         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTRK      &to 3
                                                  &kp LGUI              &to 0                 &kp LEFT_SHIFT    &kp RET       &to 2         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans            &trans  &trans            &kp LG(LBKT)    &kp LC(LS(TAB))  &kp RC(TAB)   &kp LG(RBKT)  &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans            &kp LEFT_ARROW  &kp DOWN         &kp UP_ARROW  &kp RIGHT     &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans            &trans          &trans           &trans        &trans        &trans  &trans
                        &kp LEFT_COMMAND  &to 0   &kp LEFT_SHIFT    &trans          &to 2            &trans
            >;
        };
    };
};
